# syntax=docker/dockerfile-upstream:master
#################################################

## https://www.docker.com/blog/introduction-to-heredocs-in-dockerfiles/
## ARGS are env vars that are *only available* during the Docker build.
## They can be modified at Docker build time via '--build-arg VAR="something"'.
ARG IMAGE_BASE=openwrt-base
FROM ${IMAGE_BASE} AS base

## Set Bash as the default shell.
SHELL ["/bin/bash", "-o", "pipefail", "-c"]


## Install packages and tools, and do cleanup.
ARG DEBIAN_FRONTEND=noninteractive
RUN <<EOF
    set -ex
    apt-get update -y
    apt-get install -y \
      asciidoc bash binutils \
      bison build-essential bzip2 \
      ccache flex g++ g++-multilib \
      gawk gcc gcc-multilib \
      genisoimage gettext gzip \
      help2man intltool libdw-dev \
      libelf-dev libncurses5-dev \
      libncursesw5-dev libssl-dev \
      patch perl-modules pv pwgen \
      python-is-python3 python3 \
      python3-cryptography python3-dev \
      python3-pip python3-pyelftools \
      python3-setuptools python3-venv \
      qemu-utils signify-openbsd \
      subversion swig tar unzip \
      xsltproc xxd zlib1g-dev zstd
    apt-get clean autoclean -y
    apt-get autoremove -y
    rm -rf /var/lib/apt/lists/*
EOF

ENV GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

## Install the image builder. Use tmpfile so that tar's compression autodetection works.
ARG BUILDER_URL

ARG BUILDER_WORKDIR_ROOT=/builder
ARG BUILDER_WORKDIR=${BUILDER_WORKDIR_ROOT}/imagebuilder
ARG BUILDER_USER=buildbot
ARG BUILDER_UID=1000
ARG BUILDER_GID=1000

## Create group and user
RUN groupadd --gid ${BUILDER_GID} ${BUILDER_USER}
RUN useradd \
      --uid ${BUILDER_UID} \
      --gid ${BUILDER_GID} \
      --create-home \
      --no-user-group \
      --shell "/bin/bash" ${BUILDER_USER}

## Create working directories
RUN mkdir -pv ${BUILDER_WORKDIR} \
    && chown -vR ${BUILDER_UID}:${BUILDER_GID} ${BUILDER_WORKDIR}

## Download and setup imagebuilder
RUN curl -fL "${BUILDER_URL}" -o /tmp/imagebuilder \
    && tar -xvf /tmp/imagebuilder --strip-components=1 -C "${BUILDER_WORKDIR}/" \
    && rm -f /tmp/imagebuilder

WORKDIR ${BUILDER_WORKDIR}
USER ${BUILDER_USER}
CMD ["/bin/bash"]


